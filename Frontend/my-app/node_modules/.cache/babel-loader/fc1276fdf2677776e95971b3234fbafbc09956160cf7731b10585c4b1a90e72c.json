{"ast":null,"code":"import axios from \"axios\";\nimport { createUrl } from \"../utils/utils\";\nexport async function addInventoryApi(ingredientName, ingredientCapacity, supplierName, dateOfIngredientAdded) {\n  const token = sessionStorage.getItem(\"token\");\n  const url = createUrl(`/ingredients/add-ingredients/${supplierName}`);\n  const body = {\n    ingredientName,\n    ingredientCapacity,\n    dateOfIngredientAdded\n  };\n  try {\n    debugger;\n    const response = await axios.post(url, body, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return \"success\";\n  } catch (ex) {\n    return \"error\";\n  }\n}\nexport async function showInventoryApi() {\n  const token = sessionStorage.getItem(\"token\");\n  const url = createUrl('/ingredients/all-ingredients');\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (ex) {\n    return null;\n  }\n}\nexport async function deleteInventoryApi(ingredientId) {\n  const token = sessionStorage.getItem(\"token\");\n  const url = createUrl('/ingredients/delete-ingredients/' + ingredientId);\n  try {\n    const response = await axios.delete(url, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return \"success\";\n  } catch (ex) {\n    return \"error\";\n  }\n}\nexport async function fetchInventoryDataApi(ingredientId) {\n  const token = sessionStorage.getItem(\"token\");\n  const url = createUrl('/ingredients/edit-ingredient/' + ingredientId);\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (ex) {\n    return \"error\";\n  }\n}\nexport async function updateInventoryApi(ingredientName, ingredientCapacity, supplierName, dateOfIngredientAdded, ingredientId) {\n  const token = sessionStorage.getItem(\"token\");\n  const url = createUrl('/ingredients/update-ingredients/' + supplierName + '/' + ingredientId);\n  const body = {\n    ingredientName,\n    ingredientCapacity,\n    dateOfIngredientAdded\n  };\n  try {\n    const response = await axios.put(url, body, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (ex) {\n    return \"error\";\n  }\n}","map":{"version":3,"names":["axios","createUrl","addInventoryApi","ingredientName","ingredientCapacity","supplierName","dateOfIngredientAdded","token","sessionStorage","getItem","url","body","response","post","headers","Authorization","ex","showInventoryApi","get","data","deleteInventoryApi","ingredientId","delete","fetchInventoryDataApi","updateInventoryApi","put"],"sources":["C:/Users/User/Desktop/Project/Frontend/Frontend/React Pages/my-app/src/Services/addInventoryApi.js"],"sourcesContent":["import axios from \"axios\";\nimport { createUrl } from \"../utils/utils\";\n\nexport async function addInventoryApi(ingredientName,ingredientCapacity,supplierName,dateOfIngredientAdded)\n{\n  const token=sessionStorage.getItem(\"token\");\n    \n    const url=createUrl(`/ingredients/add-ingredients/${supplierName}`);\n    const body={ingredientName,ingredientCapacity,dateOfIngredientAdded};\n   \n    try{\n        debugger;\n        const response=await axios.post(url,body,{\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          });\n        return \"success\";\n    }\n    catch(ex)\n    {\n        return \"error\";\n    }\n   \n\n}\n\nexport async function showInventoryApi(){\n  const token=sessionStorage.getItem(\"token\");\n    const url = createUrl('/ingredients/all-ingredients');\n    try{\n        const response = await axios.get(url,{\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          });\n        return response.data;\n    }catch(ex){\n        return null;\n    }\n}\n\nexport async function deleteInventoryApi(ingredientId)\n{\n  const token=sessionStorage.getItem(\"token\");\n    const url=createUrl('/ingredients/delete-ingredients/'+ingredientId);\n    try{\n        const response=await axios.delete(url,{\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          });\n        return \"success\";\n    }\n    catch(ex){\n        return \"error\";\n    }\n}\n\nexport async function fetchInventoryDataApi(ingredientId)\n{\n  const token=sessionStorage.getItem(\"token\");\n    const url=createUrl('/ingredients/edit-ingredient/'+ingredientId);\n    try{\n        \n        const response=await axios.get(url,{\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          });\n        \n        return response.data;\n    }\n    catch(ex)\n    {\n        return \"error\";    \n    }\n}\n\n\n\nexport async function updateInventoryApi(ingredientName,ingredientCapacity,supplierName,dateOfIngredientAdded,ingredientId)\n{\n  const token=sessionStorage.getItem(\"token\");\n  \n    const url=createUrl('/ingredients/update-ingredients/'+supplierName+'/'+ingredientId);\n    const body={ingredientName,ingredientCapacity,dateOfIngredientAdded};\n    try{\n        const response =await axios.put(url,body,{\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          });\n        return response.data;\n    }\n    catch(ex)\n    {\n        return \"error\";\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}