{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Project\\\\Frontend\\\\Frontend\\\\React Pages\\\\my-app\\\\src\\\\Components\\\\DileveryAddress.jsx\",\n  _s = $RefreshSig$();\nimport { MDBBtn } from \"mdb-react-ui-kit\";\nimport { useEffect, useState } from \"react\";\nimport { getAddressApi } from \"../Services/addAddressApi\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CustomerDileveryAddress() {\n  _s();\n  const [allAddress, setAllAddress] = useState([]);\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchAddress();\n  }, []);\n  const fetchAddress = async () => {\n    const response = await getAddressApi();\n    sessionStorage.removeItem(\"gotodileveryaddress\");\n    console.log(response);\n    if (response != '') {\n      setAllAddress(response);\n    } else {\n      navigate('/add_address');\n    }\n  };\n  const handleAddressSelect = address => {\n    setSelectedAddress(address);\n  };\n  const handleSubmit = () => {\n    if (selectedAddress) {\n      sessionStorage.setItem(\"selectedAddress\", JSON.stringify(selectedAddress));\n      navigate('/orderdetails');\n    } else {\n      toast.error(\"Please Select Address\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Delivery Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Landmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pincode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: allAddress.map(customer => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: customer.addressLine\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: customer.landmark\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: customer.city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: customer.pincode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: \"address\",\n                    onChange: () => handleAddressSelect(customer),\n                    checked: selectedAddress === customer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 41\n                }, this)]\n              }, customer.addressId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n            className: \"\",\n            color: \"primary\",\n            onClick: handleSubmit,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CustomerDileveryAddress, \"VnAviVLyBuwMZ/s5Gwp+NiHKP1s=\", false, function () {\n  return [useNavigate];\n});\n_c = CustomerDileveryAddress;\nexport default CustomerDileveryAddress;\nvar _c;\n$RefreshReg$(_c, \"CustomerDileveryAddress\");","map":{"version":3,"names":["MDBBtn","useEffect","useState","getAddressApi","useNavigate","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerDileveryAddress","_s","allAddress","setAllAddress","selectedAddress","setSelectedAddress","navigate","fetchAddress","response","sessionStorage","removeItem","console","log","handleAddressSelect","address","handleSubmit","setItem","JSON","stringify","error","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","className","map","customer","addressLine","landmark","city","pincode","type","name","onChange","checked","addressId","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Project/Frontend/Frontend/React Pages/my-app/src/Components/DileveryAddress.jsx"],"sourcesContent":["import { MDBBtn } from \"mdb-react-ui-kit\";\nimport { useEffect, useState } from \"react\";\nimport { getAddressApi } from \"../Services/addAddressApi\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nfunction CustomerDileveryAddress() {\n    const [allAddress, setAllAddress] = useState([]);\n    const [selectedAddress, setSelectedAddress] = useState(null);\n    const navigate=useNavigate();\n    useEffect(() => {\n        fetchAddress();\n    }, []);\n\n    const fetchAddress = async () => {\n        const response = await getAddressApi();\n        sessionStorage.removeItem(\"gotodileveryaddress\");\n        console.log(response);\n        if (response != '') {\n            setAllAddress(response);\n        } else {\n            navigate('/add_address')\n        }\n    };\n\n    const handleAddressSelect = (address) => {\n        setSelectedAddress(address);\n    };\n\n    const handleSubmit = () => {\n        if (selectedAddress) {\n            sessionStorage.setItem(\"selectedAddress\",JSON.stringify(selectedAddress));\n            navigate('/orderdetails')\n        } else {\n            toast.error(\"Please Select Address\")\n        }\n    };\n  \n\n    return (\n        <>\n        <Header />\n            <center>\n                <div className=\"container\">\n                    <br />\n                    <h2>Delivery Address</h2>\n                    <br />\n                   <br />\n                   <br />\n                    <div className=\"table-responsive\">\n                        <table className=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Address</th>\n                                    <th>Landmark</th>\n                                    <th>City</th>\n                                    <th>Pincode</th>\n                                    <th>Select</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {allAddress.map((customer) => (\n                                    <tr key={customer.addressId}>\n                                        <td>{customer.addressLine}</td>\n                                        <td>{customer.landmark}</td>\n                                        <td>{customer.city}</td>\n                                        <td>{customer.pincode}</td>\n                                        <td>\n                                            <input\n                                                type=\"radio\"\n                                                name=\"address\"\n                                                onChange={() => handleAddressSelect(customer)}\n                                                checked={selectedAddress === customer}\n                                            />\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                        <MDBBtn className=\"\" color=\"primary\" onClick={handleSubmit}>\n                            Continue\n                        </MDBBtn>\n                    </div>\n                </div>\n            </center>\n        </>\n    );\n}\n\nexport default CustomerDileveryAddress;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}