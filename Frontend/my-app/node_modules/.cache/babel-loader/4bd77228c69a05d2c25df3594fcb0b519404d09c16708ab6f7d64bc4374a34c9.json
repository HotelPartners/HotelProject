{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Project\\\\Frontend\\\\my-app\\\\src\\\\Controller\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { createUrl } from \"../utils/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function checkUserValidity(token) {\n  try {\n    const url = createUrl(\"/users/is-user-valid/\" + token);\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      return null;\n    }\n  } catch (ex) {\n    console.error(\"Error fetching user role:\", ex);\n    return null;\n  }\n}\nfunction ProtectedRoute(_ref) {\n  _s();\n  let {\n    allowedRoles\n  } = _ref;\n  const [isUserValid, setIsUserValid] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const token = sessionStorage.getItem(\"token\");\n      if (token) {\n        const role = await checkUserValidity(token);\n        setIsUserValid(role === allowedRoles[0]);\n      } else {\n        setIsUserValid(false);\n      }\n    };\n    fetchData();\n  }, [allowedRoles]);\n  if (isUserValid === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return isUserValid ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 24\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 37\n  }, this);\n}\n_s(ProtectedRoute, \"Ztjf71IPtZQFtVIuLrTRn4kEZRU=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navigate","Outlet","createUrl","jsxDEV","_jsxDEV","checkUserValidity","token","url","response","get","headers","Authorization","status","data","ex","console","error","ProtectedRoute","_ref","_s","allowedRoles","isUserValid","setIsUserValid","fetchData","sessionStorage","getItem","role","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Project/Frontend/my-app/src/Controller/ProtectedRoute.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\nimport { createUrl } from \"../utils/utils\";\r\n\r\nasync function checkUserValidity(token) {\r\n  try {\r\n    const url = createUrl(\"/users/is-user-valid/\" + token);\r\n    const response = await axios.get(url, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    if (response.status === 200) {\r\n      return response.data;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (ex) {\r\n    console.error(\"Error fetching user role:\", ex);\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction ProtectedRoute({ allowedRoles }) {\r\n  const [isUserValid, setIsUserValid] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const token = sessionStorage.getItem(\"token\");\r\n      if (token) {\r\n        const role = await checkUserValidity(token);\r\n        setIsUserValid(role === allowedRoles[0]);\r\n      } else {\r\n        setIsUserValid(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [allowedRoles]);\r\n\r\n  if (isUserValid === null) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return isUserValid ? <Outlet /> : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAeC,iBAAiBA,CAACC,KAAK,EAAE;EACtC,IAAI;IACF,MAAMC,GAAG,GAAGL,SAAS,CAAC,uBAAuB,GAAGI,KAAK,CAAC;IACtD,MAAME,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACF,GAAG,EAAE;MACpCG,OAAO,EAAE;QACPC,aAAa,EAAG,UAASL,KAAM;MACjC;IACF,CAAC,CAAC;IACF,IAAIE,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAOJ,QAAQ,CAACK,IAAI;IACtB,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAOC,EAAE,EAAE;IACXC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,EAAE,CAAC;IAC9C,OAAO,IAAI;EACb;AACF;AAEA,SAASG,cAAcA,CAAAC,IAAA,EAAmB;EAAAC,EAAA;EAAA,IAAlB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EACtC,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMjB,KAAK,GAAGkB,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;MAC7C,IAAInB,KAAK,EAAE;QACT,MAAMoB,IAAI,GAAG,MAAMrB,iBAAiB,CAACC,KAAK,CAAC;QAC3CgB,cAAc,CAACI,IAAI,KAAKN,YAAY,CAAC,CAAC,CAAC,CAAC;MAC1C,CAAC,MAAM;QACLE,cAAc,CAAC,KAAK,CAAC;MACvB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,IAAIC,WAAW,KAAK,IAAI,EAAE;IACxB,oBAAOjB,OAAA;MAAAuB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,OAAOV,WAAW,gBAAGjB,OAAA,CAACH,MAAM;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAG3B,OAAA,CAACJ,QAAQ;IAACgC,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D;AAACZ,EAAA,CAtBQF,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAwBvB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}