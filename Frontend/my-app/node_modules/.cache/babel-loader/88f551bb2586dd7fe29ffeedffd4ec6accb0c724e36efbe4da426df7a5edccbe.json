{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Project\\\\Frontend\\\\Frontend\\\\React Pages\\\\my-app\\\\src\\\\Controller\\\\ProtectedRoute.js\";\nimport axios from \"axios\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { createUrl } from \"../utils/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function ProtectedRoute(_ref) {\n  let {\n    allowedRoles\n  } = _ref;\n  var isUserValid = sessionStorage.getItem(\"token\");\n  console.log(all);\n  try {\n    const url = createUrl();\n    const response = await axios.get(url);\n    if (response.status === 200) {\n      const role = response.data.role;\n      isUserValid = role === allowedRoles;\n    } else {\n      isUserValid = false;\n    }\n  } catch (ex) {\n    isUserValid = false;\n    console.error(\"Error fetching user role:\", ex);\n  }\n  return isUserValid ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 24\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 37\n  }, this);\n}\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["axios","Navigate","Outlet","createUrl","jsxDEV","_jsxDEV","ProtectedRoute","_ref","allowedRoles","isUserValid","sessionStorage","getItem","console","log","all","url","response","get","status","role","data","ex","error","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Project/Frontend/Frontend/React Pages/my-app/src/Controller/ProtectedRoute.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\nimport { createUrl } from \"../utils/utils\";\r\n\r\nasync function ProtectedRoute({ allowedRoles }) {\r\n  var isUserValid = sessionStorage.getItem(\"token\");\r\n    console.log(all)\r\n  try {\r\n    const url = createUrl();\r\n    const response = await axios.get(url);\r\n\r\n    if (response.status === 200) {\r\n      const role = response.data.role;\r\n      isUserValid = role === allowedRoles;\r\n    }\r\n    else{\r\n        isUserValid=false;\r\n    }\r\n  } catch (ex) {\r\n    isUserValid=false;\r\n    console.error(\"Error fetching user role:\", ex);\r\n  }\r\n\r\n  return isUserValid ? <Outlet /> : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAeC,cAAcA,CAAAC,IAAA,EAAmB;EAAA,IAAlB;IAAEC;EAAa,CAAC,GAAAD,IAAA;EAC5C,IAAIE,WAAW,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC/CC,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;EAClB,IAAI;IACF,MAAMC,GAAG,GAAGZ,SAAS,CAAC,CAAC;IACvB,MAAMa,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAACF,GAAG,CAAC;IAErC,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAMC,IAAI,GAAGH,QAAQ,CAACI,IAAI,CAACD,IAAI;MAC/BV,WAAW,GAAGU,IAAI,KAAKX,YAAY;IACrC,CAAC,MACG;MACAC,WAAW,GAAC,KAAK;IACrB;EACF,CAAC,CAAC,OAAOY,EAAE,EAAE;IACXZ,WAAW,GAAC,KAAK;IACjBG,OAAO,CAACU,KAAK,CAAC,2BAA2B,EAAED,EAAE,CAAC;EAChD;EAEA,OAAOZ,WAAW,gBAAGJ,OAAA,CAACH,MAAM;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGrB,OAAA,CAACJ,QAAQ;IAAC0B,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D;AAACE,EAAA,GApBctB,cAAc;AAsB7B,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}